@model HistoryViewModel
@{
    Layout = "_Layout";
}
@section head {
}
<div class="container col-11 pb-5">
    <h2>История телефонных звонков</h2>
    <form id="searchForm" class="small col-6 needs-validation was-validated" novalidate>
        <div class="form-row col-9 align-content-sm-start">
            <div class="form-group col-4">
                <label class="col-form-label" for="DateFrom">Период с</label>
                <input type="date" required class="form-control form-control-sm rounded-0" asp-for="DateFrom" />
                <div class="invalid-feedback">Укажите дату</div>
            </div>
            <div class="form-group col-4">
                <label class="col-form-label" for="DateTo">Период по</label>
                <input type="date" required class="form-control form-control-sm rounded-0" asp-for="DateTo" />
                <div class="invalid-feedback">Укажите дату</div>
            </div>
            <div class="form-group col-4">
                <label class="col-form-label" for="TimeZonesOffsetUTC">Часовая зона</label>
                <select asp-for="OffsetUTC" asp-items="@Model.TimeZonesOffsetUTC" class="form-control form-control-sm rounded-0"> </select>
            </div>
            
        </div>
        <div class="form-row col-9 align-content-sm-start">
            <div class="form-group col-4">
                <label class="col-form-label" for="CallNumber">Кто звонил (номер)</label>
                <input type="text" value="" class="form-control form-control-sm rounded-0" asp-for="SrcCallNumber" />
            </div>
            <div class="form-group col-4">
                <label class="col-form-label" for="CallNumber">Кому звонил (номер)</label>
                <input type="text" value="" class="form-control form-control-sm rounded-0" asp-for="DstCallNumber" />
            </div>
        </div>
        <div class="form-group col-6 pt-3">
            <input id="btnFilter" type="button" class="form-control form-control-sm btn btn-success btn-sm rounded-0 col-6" value="Сформировать" />
           
        </div>
    </form>
    <partial name="_LoadingProgress" />
    <div id="calls"> <partial name="_Calls" model="@(new List<CallViewModel>())" /></div>
</div>

<script>

    var Initial = true;


    function ConvertToDate(s) {
        var b = s.split(/\D/);
        return new Date(b[2], b[1] - 1, b[0], b[3], b[4]);
    };

    function customSort(sortName, sortOrder, data) {
        var order = sortOrder === 'desc' ? -1 : 1
        data.sort(function (a, b) {
            var aa = a[sortName];
            var bb = b[sortName];
            if (sortName > '' && sortName.endsWith('Date')) {
                aa = ConvertToDate(aa);
                bb = ConvertToDate(bb);
            }
            if (aa < bb) {
                return order * -1
            }
            if (aa > bb) {
                return order
            }
            return 0
        })
    }

      function ajaxRequest(params) {
        if (Initial) {
            return params.success({
                'total': 0,
                'rows': null
            })
        }
        var filters = {
            CallDateFrom: $('#DateFrom').val(),
            CallDateTo: $('#DateTo').val(),
            SrcCallNumber: $('#SrcCallNumber').val(),
            DstCallNumber: $('#DstCallNumber').val(),
            OffsetUTC: $('#OffsetUTC').val(),
            Offset: params.data.offset,
            Limit: params.data.limit,
            Sort: params.data.sort,
            Order: params.data.order
        };
        console.log("filter="+filters);
        console.log("start filter");
        showPleaseWait();
        $.ajax({
            type: "POST",
            url: "@Url.Action("SearchCalls", "CallsHistory")",
            data: filters,                
            dataType: "json",

            success: function (data) {
                console.log("success");
                hidePleaseWait();
                params.success({                        
                    'total': data.total,                        
                    'rows': data.rows
                })
            },
            error: function (er) {
                console.log("error");
                params.error(er);
            }
        });
        }

 

    $(document).ready(function () {

        formatCallsTable();

        function formatCallsTable() {
            var table = $('#list');
            table.bootstrapTable('destroy').bootstrapTable({
                formatLoadingMessage: function () {
                    return 'Загрузка данных...';
                },
                formatNoMatches: function () {
                    return 'Записей не найдено. Задайте параметры фильтра и нажмите кнопку Сформировать';
                },
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return 'Всего звонков: ' + totalRows + '. Показаны звонки с ' + pageFrom + ' по ' + pageTo;
                }
            });
        }

        $('[data-toggle="tooltip"]').each(function () {
            var options = {
                html: true
            };
            if ($(this)[0].hasAttribute('data-type')) {
                options['template'] =
                    '<div class="tooltip ' + $(this).attr('data-type') + '" role="tooltip">' +
                    '	<div class="tooltip-arrow"></div>' +
                    '	<div class="tooltip-inner"></div>' +
                    '</div>';
            }
            $(this).tooltip(options);
        });

        var pleaseWait = $('#loadingProcess');

        showPleaseWait = function () {
            pleaseWait.modal('show');
        };

        hidePleaseWait = function () {
            pleaseWait.modal('hide');
        };

        $('#btnFilter').on('click', function (e) {
            var form = $("#searchForm")
            if (form[0].checkValidity() === false) {
                console.log("not validated");
                return;

            }
            form.addClass('was-validated');

            Initial = false;
            formatCallsTable();
            /*var table = $('#list');
            table.bootstrapTable('destroy').bootstrapTable({
                formatLoadingMessage: function () {
                    return 'Загрузка данных...';
                },
                formatNoMatches: function () {
                        return 'Записей не найдено. Задайте параметры фильтра и нажмите кнопку Сформировать';
                    },
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return 'Всего звонков: ' + totalRows + '. Показаны звонки с ' + pageFrom + ' по ' + pageTo;
                }
            });*/
        });

        function SeacrhCalls(data) {
            console.log("data:" + data);
            return;
            var form = $("#searchForm")
            if (form[0].checkValidity() === false) {
                console.log("not validated");
                return;

            }
            form.addClass('was-validated');

            var filters = {
                CallDateFrom: $('#DateFrom').val(),
                CallDateTo : $('#DateTo').val(),
                SrcCallNumber: $('#SrcCallNumber').val(),
                DstCallNumber: $('#DstCallNumber').val()
            };
            console.log(filters);
            showPleaseWait();
            $.ajax({
                url: "@Url.Action("SearchCalls", "CallsHistory")",
                type: 'POST',
                cache: false,
                async: true,
                dataType: "html",
                data: filters
            })
                .done(function (result) {
                    $('#calls').html(result);
                    hidePleaseWait();
                }).fail(function (xhr) {
                    console.log('error : ' + xhr.status + ' - '
                        + xhr.statusText + ' - ' + xhr.responseText);
                });
        }


      

    });
</script>

